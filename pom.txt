POM.xml est le fichier au format XML de configuration des projets Maven.
Il contient des informations telles que l'identifiant du projet, la version, les dépendances, la configuration des build et autres.

un exemple d'un POM généré par défaut :

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mycompany.app</groupId>
  <artifactId>my-app</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Maven Quick Start Archetype</name>
  <url>http://maven.apache.org</url>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
On y retrouve donc les informations sur le projet en lui-même, et puis la dépendance donné par défaut qui est Junit.
En principe, on modifie le POM dès que l'on ajoute quelque chose que Maven ne peut pas deviner, comme une nouvelle dépendance. Tant que l'on respecte les conventions données par Maven, le code à ajouter dans le POM reste synthétique.
Regrouper toute la configuration en un endroit offre des avantages et des défauts : Elle est facile à trouver puisque tout est dans le pom, mais pour des projets conséquents la taille du pom peut devenir très grande et il peut être plus difficile à comprendre.
